# Name of the workflow
name: Terraform Apply for Development and SonarQube Scan

# Define when the workflow should be triggered
on:
  push:
    branches:
      - main  # Trigger when changes are pushed to 'main'
  pull_request:
    types: [opened, synchronize, reopened]  # Run on PR updates

# Define jobs
jobs:
  terraform:
    name: Terraform Apply to Development
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    environment:
      name: dev

    steps:
      # Step 1: Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python for Lambda packaging
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Create Lambda zip file
        run: |
          cd modules/lambda
          zip lambda_function.zip lambda_function.py

      # Step 3: Configure AWS credentials using OIDC
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_DEV_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 4: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      # Step 5: Initialize Terraform
      - name: Terraform Init
        run: |
          cd env/dev
          terraform init

      # Step 6: Validate Terraform
      - name: Terraform Validate
        run: |
          cd env/dev
          terraform validate

      # Step 7: Terraform Plan
      - name: Terraform Plan
        run: |
          cd env/dev
          terraform plan -var-file=dev.tfvars

      # Step 8: Terraform Apply
      - name: Terraform Apply
        run: |
          cd env/dev
          terraform apply -var-file=dev.tfvars -auto-approve

  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest  # Switched to Ubuntu for better compatibility

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures better analysis accuracy

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"
        with:
          args: >
            -Dsonar.projectKey=kneelesh951_terraformFinal
            -Dsonar.organization=kneelesh951
            -Dsonar.sources=.
            -Dsonar.host.url=https://sonarcloud.io
